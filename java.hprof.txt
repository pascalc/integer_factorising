JAVA PROFILE 1.0.1, created Sun Nov 13 21:24:23 2011

Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

%W% %E%

 Copyright (c) 2006 Sun Microsystems, Inc. All  Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000014f, id = 200001, name="main", group="main")
THREAD START (obj=500002ad, id = 200004, name="Poller SunPKCS11-Darwin", group="main")
THREAD END (id = 200001)
THREAD START (obj=500002b6, id = 200006, name="DestroyJavaVM", group="main")
THREAD START (obj=500002ba, id = 200007, name="Thread-0", group="main")
THREAD END (id = 200007)
THREAD END (id = 200006)
TRACE 300275:
	java.math.BigInteger.<init>(BigInteger.java:316)
	java.math.BigInteger.<init>(BigInteger.java:451)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:19)
	BrentOptimised.factor(BrentOptimised.java:56)
TRACE 300273:
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:107)
	java.math.MutableBigInteger.divide(MutableBigInteger.java:881)
	java.math.BigInteger.remainder(BigInteger.java:1354)
	java.math.BigInteger.mod(BigInteger.java:1531)
TRACE 300277:
	java.lang.String.lastIndexOf(String.java:1823)
	java.lang.String.lastIndexOf(String.java:1805)
	java.math.BigInteger.<init>(BigInteger.java:280)
	java.math.BigInteger.<init>(BigInteger.java:451)
TRACE 300274:
	java.math.BigInteger.<init>(BigInteger.java:451)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:19)
	BrentOptimised.factor(BrentOptimised.java:56)
	BrentOptimised.factor(BrentOptimised.java:59)
TRACE 300282:
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
	BrentOptimised.factor(BrentOptimised.java:56)
	BrentOptimised.factor(BrentOptimised.java:59)
	BrentOptimised.factor(BrentOptimised.java:59)
TRACE 300284:
	java.math.MutableBigInteger.toBigInteger(MutableBigInteger.java:141)
	java.math.BigInteger.remainder(BigInteger.java:1354)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
TRACE 300283:
	java.math.MutableBigInteger.divide(MutableBigInteger.java:881)
	java.math.BigInteger.remainder(BigInteger.java:1354)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
TRACE 300264:
	java.math.BigInteger.<init>(BigInteger.java:309)
	java.math.BigInteger.<init>(BigInteger.java:451)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:19)
	BrentOptimised.factor(BrentOptimised.java:56)
TRACE 300272:
	java.util.Arrays.copyOfRange(Arrays.java:3137)
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:107)
	java.math.MutableBigInteger.divide(MutableBigInteger.java:881)
	java.math.BigInteger.remainder(BigInteger.java:1354)
TRACE 300263:
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:69)
	java.math.BigInteger.remainder(BigInteger.java:1350)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
TRACE 300279:
	java.math.BigInteger.remainder(BigInteger.java:1350)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
	BrentOptimised.factor(BrentOptimised.java:56)
TRACE 300295:
	java.io.FileOutputStream.writeBytes(FileOutputStream.java:Unknown line)
	java.io.FileOutputStream.write(FileOutputStream.java:282)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
TRACE 300271:
	java.math.BigInteger.squareToLen(BigInteger.java:1274)
	java.math.BigInteger.oddModPow(BigInteger.java:1821)
	java.math.BigInteger.modPow(BigInteger.java:1571)
	java.math.BigInteger.passesMillerRabin(BigInteger.java:884)
TRACE 300223:
	java.io.FileInputStream.readBytes(FileInputStream.java:Unknown line)
	java.io.FileInputStream.read(FileInputStream.java:220)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:256)
	java.io.BufferedInputStream.read(BufferedInputStream.java:317)
TRACE 300286:
	BrentOptimised.factor(BrentOptimised.java:56)
	BrentOptimised.factor(BrentOptimised.java:59)
	BrentOptimised.factor(BrentOptimised.java:59)
	BrentOptimised.factor(BrentOptimised.java:59)
TRACE 300287:
	java.math.BigInteger.equals(BigInteger.java:2521)
	java.math.BigInteger.isProbablePrime(BigInteger.java:2436)
	BrentOptimised.factor(BrentOptimised.java:53)
	BrentOptimised.factor(BrentOptimised.java:59)
TRACE 300269:
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:78)
	java.math.MutableBigInteger.divide(MutableBigInteger.java:896)
	java.math.BigInteger.remainder(BigInteger.java:1354)
	java.math.BigInteger.mod(BigInteger.java:1531)
TRACE 300280:
	java.math.BigInteger.remainder(BigInteger.java:1352)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
	BrentOptimised.factor(BrentOptimised.java:56)
TRACE 300291:
	java.math.BigInteger.multiply(BigInteger.java:1143)
	BrentOptimised.f(BrentOptimised.java:9)
	BrentOptimised.divisor(BrentOptimised.java:35)
	BrentOptimised.factor(BrentOptimised.java:57)
TRACE 300292:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:45)
	java.lang.StringBuilder.<init>(StringBuilder.java:68)
	java.lang.StackTraceElement.toString(StackTraceElement.java:157)
	java.lang.String.valueOf(String.java:2826)
TRACE 300293:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:111)
	java.io.PrintStream.write(PrintStream.java:430)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:202)
TRACE 300294:
	sun.nio.cs.SingleByteEncoder.encodeArrayLoop(SingleByteEncoder.java:54)
	sun.nio.cs.SingleByteEncoder.encodeLoop(SingleByteEncoder.java:130)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:252)
TRACE 300296:
	java.util.Arrays.copyOfRange(Arrays.java:3209)
	java.lang.String.<init>(String.java:215)
	java.lang.StringBuilder.toString(StringBuilder.java:430)
	java.lang.Throwable.printStackTrace(Throwable.java:464)
TRACE 300156:
	java.util.concurrent.ConcurrentHashMap$HashEntry.newArray(ConcurrentHashMap.java:205)
	java.util.concurrent.ConcurrentHashMap$Segment.<init>(ConcurrentHashMap.java:291)
	java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:613)
	java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:652)
TRACE 300025:
	java.util.zip.ZipFile.open(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:127)
	java.util.jar.JarFile.<init>(JarFile.java:135)
	java.util.jar.JarFile.<init>(JarFile.java:72)
TRACE 300232:
	sun.security.rsa.RSAKeyFactory.generatePublic(RSAKeyFactory.java:281)
	sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:184)
	java.security.KeyFactory.generatePublic(KeyFactory.java:304)
	sun.security.x509.X509Key.buildX509Key(X509Key.java:206)
TRACE 300193:
	java.math.BigInteger.mulAdd(BigInteger.java:1907)
	java.math.BigInteger.montReduce(BigInteger.java:1852)
	java.math.BigInteger.oddModPow(BigInteger.java:1822)
	java.math.BigInteger.modPow(BigInteger.java:1571)
TRACE 300221:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:45)
	java.lang.StringBuffer.<init>(StringBuffer.java:91)
	java.net.URLStreamHandler.toExternalForm(URLStreamHandler.java:473)
	java.net.URL.toExternalForm(URL.java:901)
TRACE 300194:
	java.math.BigInteger.addOne(BigInteger.java:1931)
	java.math.BigInteger.montReduce(BigInteger.java:1853)
	java.math.BigInteger.oddModPow(BigInteger.java:1822)
	java.math.BigInteger.modPow(BigInteger.java:1571)
TRACE 300022:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:162)
	java.util.jar.JarFile.getEntry(JarFile.java:208)
	java.util.jar.JarFile.getJarEntry(JarFile.java:191)
TRACE 300254:
	sun.security.pkcs11.wrapper.PKCS11.C_GetSlotList(PKCS11.java:Unknown line)
	sun.security.pkcs11.SunPKCS11.<init>(SunPKCS11.java:314)
	sun.security.pkcs11.SunPKCS11.<init>(SunPKCS11.java:86)
	sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:Unknown line)
TRACE 300134:
	java.security.KeyFactory.generatePublic(KeyFactory.java:304)
	sun.security.x509.X509Key.buildX509Key(X509Key.java:206)
	sun.security.x509.X509Key.parse(X509Key.java:153)
	sun.security.x509.CertificateX509Key.<init>(CertificateX509Key.java:58)
TRACE 300045:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:45)
	java.lang.StringBuilder.<init>(StringBuilder.java:80)
	sun.security.util.ManifestDigester.<init>(ManifestDigester.java:114)
	java.util.jar.JarVerifier.processEntry(JarVerifier.java:261)
TRACE 300239:
	java.math.BigInteger.montReduce(BigInteger.java:1858)
	java.math.BigInteger.oddModPow(BigInteger.java:1822)
	java.math.BigInteger.modPow(BigInteger.java:1571)
	sun.security.rsa.RSACore.crypt(RSACore.java:96)
TRACE 300241:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:208)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:193)
	java.util.jar.JarFile.getInputStream(JarFile.java:398)
TRACE 300227:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.util.jar.Manifest$FastInputStream.readLine(Manifest.java:372)
	java.util.jar.Manifest$FastInputStream.readLine(Manifest.java:390)
	java.util.jar.Attributes.read(Attributes.java:359)
TRACE 300067:
	sun.security.util.DerInputStream.init(DerInputStream.java:96)
	sun.security.util.DerInputStream.<init>(DerInputStream.java:63)
	sun.security.pkcs.PKCS7.<init>(PKCS7.java:91)
	sun.security.util.SignatureFileVerifier.<init>(SignatureFileVerifier.java:80)
TRACE 300096:
	java.lang.String.startsWith(String.java:1450)
	java.security.Provider.parseLegacyPut(Provider.java:576)
	java.security.Provider.ensureLegacyParsed(Provider.java:537)
	java.security.Provider.getService(Provider.java:676)
TRACE 300262:
	java.math.MutableBigInteger.divideOneWord(MutableBigInteger.java:815)
	java.math.MutableBigInteger.divide(MutableBigInteger.java:893)
	java.math.BigInteger.remainder(BigInteger.java:1354)
	java.math.BigInteger.mod(BigInteger.java:1531)
TRACE 300265:
	java.math.MutableBigInteger.binaryGcd(MutableBigInteger.java:1186)
	java.math.MutableBigInteger.binaryGCD(MutableBigInteger.java:1150)
	java.math.MutableBigInteger.hybridGCD(MutableBigInteger.java:1104)
	java.math.BigInteger.gcd(BigInteger.java:1408)
TRACE 300266:
	java.math.MutableBigInteger.compare(MutableBigInteger.java:187)
	java.math.MutableBigInteger.difference(MutableBigInteger.java:682)
	java.math.MutableBigInteger.binaryGCD(MutableBigInteger.java:1160)
	java.math.MutableBigInteger.hybridGCD(MutableBigInteger.java:1104)
TRACE 300267:
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:69)
	java.math.BigInteger.remainder(BigInteger.java:1350)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.f(BrentOptimised.java:9)
TRACE 300268:
	java.util.Arrays.copyOfRange(Arrays.java:3137)
	java.math.MutableBigInteger.getMagnitudeArray(MutableBigInteger.java:116)
	java.math.MutableBigInteger.toBigInteger(MutableBigInteger.java:141)
	java.math.BigInteger.remainder(BigInteger.java:1354)
TRACE 300270:
	java.math.BigInteger.squareToLen(BigInteger.java:1285)
	java.math.BigInteger.oddModPow(BigInteger.java:1821)
	java.math.BigInteger.modPow(BigInteger.java:1571)
	java.math.BigInteger.passesMillerRabin(BigInteger.java:884)
TRACE 300245:
	sun.reflect.MethodAccessorGenerator.generate(MethodAccessorGenerator.java:119)
	sun.reflect.MethodAccessorGenerator.generateConstructor(MethodAccessorGenerator.java:76)
	sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:30)
	sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
TRACE 300278:
	java.math.BigInteger.add(BigInteger.java:1049)
	java.math.BigInteger.add(BigInteger.java:1023)
	BrentOptimised.f(BrentOptimised.java:9)
	BrentOptimised.divisor(BrentOptimised.java:35)
TRACE 300281:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.util.Arrays.copyOf(Arrays.java:2835)
	java.math.MutableBigInteger.<init>(MutableBigInteger.java:98)
	java.math.BigInteger.gcd(BigInteger.java:1406)
TRACE 300285:
	java.math.BigInteger.subtract(BigInteger.java:1109)
	java.math.BigInteger.subtract(BigInteger.java:1095)
	BrentOptimised.divisor(BrentOptimised.java:38)
	BrentOptimised.factor(BrentOptimised.java:57)
TRACE 300288:
	java.math.BigInteger.equals(BigInteger.java:2515)
	java.math.BigInteger.isProbablePrime(BigInteger.java:2436)
	BrentOptimised.factor(BrentOptimised.java:53)
	BrentOptimised.factor(BrentOptimised.java:59)
TRACE 300289:
	java.math.BigInteger.remainder(BigInteger.java:1351)
	java.math.BigInteger.mod(BigInteger.java:1531)
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:20)
	BrentOptimised.factor(BrentOptimised.java:56)
TRACE 300290:
	BrentOptimised.smallPrimeDivisor(BrentOptimised.java:19)
	BrentOptimised.factor(BrentOptimised.java:56)
	BrentOptimised.factor(BrentOptimised.java:59)
	BrentOptimised.factor(BrentOptimised.java:59)
CPU SAMPLES BEGIN (total = 213) Sun Nov 13 21:24:26 2011
rank   self  accum   count trace method
   1 28.17% 28.17%      60 300275 java.math.BigInteger.<init>
   2 22.07% 50.23%      47 300273 java.math.MutableBigInteger.<init>
   3 11.27% 61.50%      24 300277 java.lang.String.lastIndexOf
   4  4.23% 65.73%       9 300274 java.math.BigInteger.<init>
   5  3.76% 69.48%       8 300282 BrentOptimised.smallPrimeDivisor
   6  1.88% 71.36%       4 300284 java.math.MutableBigInteger.toBigInteger
   7  1.88% 73.24%       4 300283 java.math.MutableBigInteger.divide
   8  1.41% 74.65%       3 300264 java.math.BigInteger.<init>
   9  1.41% 76.06%       3 300272 java.util.Arrays.copyOfRange
  10  0.94% 77.00%       2 300263 java.math.MutableBigInteger.<init>
  11  0.94% 77.93%       2 300279 java.math.BigInteger.remainder
  12  0.94% 78.87%       2 300295 java.io.FileOutputStream.writeBytes
  13  0.94% 79.81%       2 300271 java.math.BigInteger.squareToLen
  14  0.94% 80.75%       2 300223 java.io.FileInputStream.readBytes
  15  0.94% 81.69%       2 300286 BrentOptimised.factor
  16  0.94% 82.63%       2 300287 java.math.BigInteger.equals
  17  0.94% 83.57%       2 300269 java.math.MutableBigInteger.<init>
  18  0.94% 84.51%       2 300280 java.math.BigInteger.remainder
  19  0.47% 84.98%       1 300291 java.math.BigInteger.multiply
  20  0.47% 85.45%       1 300292 java.lang.AbstractStringBuilder.<init>
  21  0.47% 85.92%       1 300293 java.lang.System.arraycopy
  22  0.47% 86.38%       1 300294 sun.nio.cs.SingleByteEncoder.encodeArrayLoop
  23  0.47% 86.85%       1 300296 java.util.Arrays.copyOfRange
  24  0.47% 87.32%       1 300156 java.util.concurrent.ConcurrentHashMap$HashEntry.newArray
  25  0.47% 87.79%       1 300025 java.util.zip.ZipFile.open
  26  0.47% 88.26%       1 300232 sun.security.rsa.RSAKeyFactory.generatePublic
  27  0.47% 88.73%       1 300193 java.math.BigInteger.mulAdd
  28  0.47% 89.20%       1 300221 java.lang.AbstractStringBuilder.<init>
  29  0.47% 89.67%       1 300194 java.math.BigInteger.addOne
  30  0.47% 90.14%       1 300022 java.util.zip.ZipFile.getEntry
  31  0.47% 90.61%       1 300254 sun.security.pkcs11.wrapper.PKCS11.C_GetSlotList
  32  0.47% 91.08%       1 300134 java.security.KeyFactory.generatePublic
  33  0.47% 91.55%       1 300045 java.lang.AbstractStringBuilder.<init>
  34  0.47% 92.02%       1 300239 java.math.BigInteger.montReduce
  35  0.47% 92.49%       1 300241 java.util.zip.ZipFile.getEntry
  36  0.47% 92.96%       1 300227 java.lang.System.arraycopy
  37  0.47% 93.43%       1 300067 sun.security.util.DerInputStream.init
  38  0.47% 93.90%       1 300096 java.lang.String.startsWith
  39  0.47% 94.37%       1 300262 java.math.MutableBigInteger.divideOneWord
  40  0.47% 94.84%       1 300265 java.math.MutableBigInteger.binaryGcd
  41  0.47% 95.31%       1 300266 java.math.MutableBigInteger.compare
  42  0.47% 95.77%       1 300267 java.math.MutableBigInteger.<init>
  43  0.47% 96.24%       1 300268 java.util.Arrays.copyOfRange
  44  0.47% 96.71%       1 300270 java.math.BigInteger.squareToLen
  45  0.47% 97.18%       1 300245 sun.reflect.MethodAccessorGenerator.generate
  46  0.47% 97.65%       1 300278 java.math.BigInteger.add
  47  0.47% 98.12%       1 300281 java.lang.System.arraycopy
  48  0.47% 98.59%       1 300285 java.math.BigInteger.subtract
  49  0.47% 99.06%       1 300288 java.math.BigInteger.equals
  50  0.47% 99.53%       1 300289 java.math.BigInteger.remainder
  51  0.47% 100.00%       1 300290 BrentOptimised.smallPrimeDivisor
CPU SAMPLES END
